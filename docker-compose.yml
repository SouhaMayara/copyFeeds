version: '3.9'

services:
  app:
    build: .
    volumes:
      - .:/app
    depends_on:
      prod_db:
        condition: service_healthy
      dev_db:
        condition: service_healthy
    entrypoint: [ "/usr/local/bin/php", "/app/bin/console" ]

  prod_db:
    image: postgres:latest
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: prod_db
    volumes:
      - prod_db_data:/var/lib/postgresql/data
      - ./initdb/init-prod.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5433:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d prod_db" ]
      interval: 10s
      timeout: 5s
      retries: 5

  dev_db:
    image: postgres:latest
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: dev_db
    volumes:
      - dev_db_data:/var/lib/postgresql/data
      - ./initdb/init-dev.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5434:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d dev_db" ]
      interval: 10s
      timeout: 5s
      retries: 5

  phpunit:
    build: .
    volumes:
      - .:/app
    depends_on:
      prod_db:
        condition: service_healthy
      dev_db:
        condition: service_healthy
    entrypoint: [ "vendor/bin/phpunit" ]

volumes:
  prod_db_data:
  dev_db_data:
